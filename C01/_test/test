#!/bin/bash

R='\033[0;31m'
G='\033[0;32m'
B='\033[0;33m'
Y='\033[0;33m'
NC='\033[0m'
COMPILE='cc *.c'

check() 
{
    echo -en "${Y}Exercise $1	${NC}"
    if [ -f ../ex$1/$2.c ]; then
        cc test$1.c ../ex$1/$2.c
		./a.out "$3"
		if [ $? = 0 ]; then
            echo -e "${G}OK${NC}"
        else
			echo -e "${R}Execution failed for input:${NC} ${Y}$3${NC}"
            echo -e "${R}KO${NC}"
        fi    
		rm a.out
	else
        echo -e "${R}Solution file not found"
    fi
}

check_diff()
{
	echo -en "${Y}Exercise $1	${NC}"
    if [ -f ../ex$1/$2.c ]; then
		cc test$1.c ../ex$1/$2.c
		./a.out "$4" > output
		if [ -f a.out ] && diff output "expected_output/$2($3)" > dump; then
			echo -e "${G}OK${NC}"
        else
			if [ "$4" ]; then 
				echo -e "	Execution failed for input: $4" 
			fi
            echo -e "${R}KO${NC}"
        fi 
		rm a.out
	else
        echo -e "${R}Solution file not found${NC}"
    fi
}

########## NORMINETTE ##########
if [ $1 ] && [ $1 = '-n' ]; then
	# echo HELLO
	tar cf docasno.tar *.c
	rm *.c
	cd ..
	norminette
	cd _test
	tar xf docasno.tar
	rm docasno.tar
fi
################################

check 00 ft_ft
check 01 ft_ultimate_ft
check 02 ft_swap
check 03 ft_div_mod
check 04 ft_ultimate_div_mod
check_diff 05 ft_putstr 'char *str' '"This sentence is six words long."'
check 06 ft_strlen
check 07 ft_rev_int_tab
check 08 ft_sort_int_tab
